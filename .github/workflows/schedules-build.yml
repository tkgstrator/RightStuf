name: Scheduled build

on:
  push:
    branches:
      - develop
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set Node v16.15.0
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0

      - name: Cache CDK Dependencies
        uses: actions/cache@v3
        id: cache_cdk_dependency_id
        env:
          cache-name: cache-cdk-dependency
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install Dependencies
        if: ${{ steps.cache_cdk_dependency_id.outputs.cache-hit != 'true' }}
        run: npm install

      - name: Format
        run: npm run format
      
      - name: Lint
        run: npm run lint

      - name: Retrieve Product Information
        run: npm run generate 
      
      - name: Build
        run: npm run build

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: 'dist'
          production-branch: develop
          github-deployment-environment: ${{ steps.github_deployment_environment.outputs.GITHUB_DEPLOYMENT_ENVIRONMENT }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: ${{ github.event.head_commit.message || github.event.pull_request.title }}
          alias: deploy-preview-${{ github.event.number }}
          fails-without-credentials: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_PRD }}

      # - name: Deploy
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: dist
